/**
 * Easy Cash By KPV
 * The Easy Cash API
 *
 * The version of the OpenAPI document: V 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Cat from '../model/Cat';
import CreateCatDto from '../model/CreateCatDto';

/**
* Cats service.
* @module api/CatsApi
* @version V 0.0.1
*/
export default class CatsApi {

    /**
    * Constructs a new CatsApi. 
    * @alias module:api/CatsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the create operation.
     * @callback module:api/CatsApi~createCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create cat
     * @param {module:model/CreateCatDto} createCatDto 
     * @param {module:api/CatsApi~createCallback} callback The callback function, accepting three arguments: error, data, response
     */
    create(createCatDto, callback) {
      let postBody = createCatDto;
      // verify the required parameter 'createCatDto' is set
      if (createCatDto === undefined || createCatDto === null) {
        throw new Error("Missing the required parameter 'createCatDto' when calling create");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/cats', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the findOne operation.
     * @callback module:api/CatsApi~findOneCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Cat} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id 
     * @param {module:api/CatsApi~findOneCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Cat}
     */
    findOne(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling findOne");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Cat;
      return this.apiClient.callApi(
        '/cats/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
