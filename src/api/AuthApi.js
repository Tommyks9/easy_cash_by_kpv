/**
 * Easy Cash By KPV
 * The Easy Cash API
 *
 * The version of the OpenAPI document: V 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import OTPDto from '../model/OTPDto';
import UserAuthDto from '../model/UserAuthDto';

/**
* Auth service.
* @module api/AuthApi
* @version V 0.0.1
*/
export default class AuthApi {

    /**
    * Constructs a new AuthApi. 
    * @alias module:api/AuthApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getProfile operation.
     * @callback module:api/AuthApi~getProfileCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Auth Profile
     * @param {module:api/AuthApi~getProfileCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getProfile(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/auth/profile', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the otp operation.
     * @callback module:api/AuthApi~otpCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Genarate OTP
     * @param {module:model/OTPDto} oTPDto 
     * @param {module:api/AuthApi~otpCallback} callback The callback function, accepting three arguments: error, data, response
     */
    otp(oTPDto, callback) {
      let postBody = oTPDto;
      // verify the required parameter 'oTPDto' is set
      if (oTPDto === undefined || oTPDto === null) {
        throw new Error("Missing the required parameter 'oTPDto' when calling otp");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/auth/otp', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the signIn operation.
     * @callback module:api/AuthApi~signInCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Auth login
     * @param {module:model/UserAuthDto} userAuthDto 
     * @param {module:api/AuthApi~signInCallback} callback The callback function, accepting three arguments: error, data, response
     */
    signIn(userAuthDto, callback) {
      let postBody = userAuthDto;
      // verify the required parameter 'userAuthDto' is set
      if (userAuthDto === undefined || userAuthDto === null) {
        throw new Error("Missing the required parameter 'userAuthDto' when calling signIn");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/auth/login', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
