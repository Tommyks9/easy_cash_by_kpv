/**
 * Easy Cash By KPV
 * The Easy Cash API
 *
 * The version of the OpenAPI document: V 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OTPDto model module.
 * @module model/OTPDto
 * @version V 0.0.1
 */
class OTPDto {
    /**
     * Constructs a new <code>OTPDto</code>.
     * @alias module:model/OTPDto
     * @param username {String} 
     * @param type {String} 
     * @param remask {String} 
     * @param userID {String} 
     * @param branchesID {String} 
     */
    constructor(username, type, remask, userID, branchesID) { 
        
        OTPDto.initialize(this, username, type, remask, userID, branchesID);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, username, type, remask, userID, branchesID) { 
        obj['username'] = username;
        obj['type'] = type;
        obj['remask'] = remask;
        obj['userID'] = userID;
        obj['branchesID'] = branchesID;
    }

    /**
     * Constructs a <code>OTPDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OTPDto} obj Optional instance to populate.
     * @return {module:model/OTPDto} The populated <code>OTPDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OTPDto();

            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('remask')) {
                obj['remask'] = ApiClient.convertToType(data['remask'], 'String');
            }
            if (data.hasOwnProperty('userID')) {
                obj['userID'] = ApiClient.convertToType(data['userID'], 'String');
            }
            if (data.hasOwnProperty('branchesID')) {
                obj['branchesID'] = ApiClient.convertToType(data['branchesID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OTPDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OTPDto</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OTPDto.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['remask'] && !(typeof data['remask'] === 'string' || data['remask'] instanceof String)) {
            throw new Error("Expected the field `remask` to be a primitive type in the JSON string but got " + data['remask']);
        }
        // ensure the json data is a string
        if (data['userID'] && !(typeof data['userID'] === 'string' || data['userID'] instanceof String)) {
            throw new Error("Expected the field `userID` to be a primitive type in the JSON string but got " + data['userID']);
        }
        // ensure the json data is a string
        if (data['branchesID'] && !(typeof data['branchesID'] === 'string' || data['branchesID'] instanceof String)) {
            throw new Error("Expected the field `branchesID` to be a primitive type in the JSON string but got " + data['branchesID']);
        }

        return true;
    }


}

OTPDto.RequiredProperties = ["username", "type", "remask", "userID", "branchesID"];

/**
 * @member {String} username
 */
OTPDto.prototype['username'] = undefined;

/**
 * @member {String} type
 */
OTPDto.prototype['type'] = undefined;

/**
 * @member {String} remask
 */
OTPDto.prototype['remask'] = undefined;

/**
 * @member {String} userID
 */
OTPDto.prototype['userID'] = undefined;

/**
 * @member {String} branchesID
 */
OTPDto.prototype['branchesID'] = undefined;






export default OTPDto;

