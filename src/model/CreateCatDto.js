/**
 * Easy Cash By KPV
 * The Easy Cash API
 *
 * The version of the OpenAPI document: V 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateCatDto model module.
 * @module model/CreateCatDto
 * @version V 0.0.1
 */
class CreateCatDto {
    /**
     * Constructs a new <code>CreateCatDto</code>.
     * @alias module:model/CreateCatDto
     * @param name {String} 
     * @param age {Number} 
     * @param breed {String} 
     */
    constructor(name, age, breed) { 
        
        CreateCatDto.initialize(this, name, age, breed);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, age, breed) { 
        obj['name'] = name;
        obj['age'] = age;
        obj['breed'] = breed;
    }

    /**
     * Constructs a <code>CreateCatDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateCatDto} obj Optional instance to populate.
     * @return {module:model/CreateCatDto} The populated <code>CreateCatDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateCatDto();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('age')) {
                obj['age'] = ApiClient.convertToType(data['age'], 'Number');
            }
            if (data.hasOwnProperty('breed')) {
                obj['breed'] = ApiClient.convertToType(data['breed'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateCatDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateCatDto</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateCatDto.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['breed'] && !(typeof data['breed'] === 'string' || data['breed'] instanceof String)) {
            throw new Error("Expected the field `breed` to be a primitive type in the JSON string but got " + data['breed']);
        }

        return true;
    }


}

CreateCatDto.RequiredProperties = ["name", "age", "breed"];

/**
 * @member {String} name
 */
CreateCatDto.prototype['name'] = undefined;

/**
 * @member {Number} age
 */
CreateCatDto.prototype['age'] = undefined;

/**
 * @member {String} breed
 */
CreateCatDto.prototype['breed'] = undefined;






export default CreateCatDto;

